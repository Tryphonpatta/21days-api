model Goal {
  id          String    @id @default(cuid())
  name        String
  note        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  bestStreak  Int       @default(0)
  streak      Int       @default(0)
  userId      String
  description String    @default("")
  color       String
  tagId       String?
  tag         Tag?      @relation(fields: [tagId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  goalLog     goalLog[]
}

model goalLog {
  id        Int      @id @default(autoincrement())
  goalId    String
  goal      Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)
  streak    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  day       DateTime @default(now())
  status    Boolean
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../../generated/client"
  previewFeatures = ["prismaSchemaFolder"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id     String @id @default(cuid())
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  Goal   Goal[]
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  email     String   @unique
  img       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Goal      Goal[]
  Tag       Tag[]
}
